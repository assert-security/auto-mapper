/*
 * LocalServer
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


 package io.swagger.client.model;

 import java.util.Objects;
 import com.google.gson.annotations.SerializedName;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import java.util.ArrayList;
 import java.util.List;
 
 /**
  * 
  */
 @ApiModel(description = "")
 @javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-03-05T11:32:31.617-05:00")
 public class BurpIssueData {
   @SerializedName("Succeeded")
   private Boolean succeeded = null;
 
   @SerializedName("ErrorMessages")
   private List<String> errorMessages = null;
 
   @SerializedName("Name")
   private String name = null;
 
   @SerializedName("SerialNumber")
   private String serialNumber = null;
 
   @SerializedName("Type")
   private String type = null;
 
   @SerializedName("Host")
   private BurpIssueHost host = null;
 
   @SerializedName("Path")
   private String path = null;
 
   @SerializedName("Location")
   private String location = null;
 
   @SerializedName("Severity")
   private String severity = null;
 
   @SerializedName("Confidence")
   private String confidence = null;
 
   @SerializedName("IssueBackground")
   private String issueBackground = null;
 
   @SerializedName("RemediationBackground")
   private String remediationBackground = null;
 
   @SerializedName("RemediationDetail")
   private String remediationDetail = null;
 
   @SerializedName("References")
   private String references = null;
 
   @SerializedName("VulnerabilityClassifications")
   private String vulnerabilityClassifications = null;
 
   @SerializedName("IssueDetail")
   private String issueDetail = null;
 
   @SerializedName("IssueDetailItems")
   private List<String> issueDetailItems = null;
 
   @SerializedName("RequestResponses")
   private List<BurpIssueRequestResponse> requestResponses = null;
 
   @SerializedName("CollaboratorEvents")
   private List<BurpIssueCollaboratorEvent> collaboratorEvents = null;
 
   @SerializedName("InfiltratorEvents")
   private List<BurpIssueInfiltratorEvent> infiltratorEvents = null;
 
   @SerializedName("StaticAnalysisItems")
   private List<BurpIssueStaticAnalysisItem> staticAnalysisItems = null;
 
   @SerializedName("DynamicAnalysisItems")
   private List<BurpIssueDynamicAnalysisItem> dynamicAnalysisItems = null;
 
   @SerializedName("PrototypePollutionItems")
   private List<BurpIssuePrototypePollutionItem> prototypePollutionItems = null;
 
   public BurpIssueData succeeded(Boolean succeeded) {
     this.succeeded = succeeded;
     return this;
   }
 
    /**
    * Get succeeded
    * @return succeeded
   **/
   @ApiModelProperty(value = "")
   public Boolean isSucceeded() {
     return succeeded;
   }
 
   public void setSucceeded(Boolean succeeded) {
     this.succeeded = succeeded;
   }
 
   public BurpIssueData errorMessages(List<String> errorMessages) {
     this.errorMessages = errorMessages;
     return this;
   }
 
   public BurpIssueData addErrorMessagesItem(String errorMessagesItem) {
     if (this.errorMessages == null) {
       this.errorMessages = new ArrayList<String>();
     }
     this.errorMessages.add(errorMessagesItem);
     return this;
   }
 
    /**
    * Get errorMessages
    * @return errorMessages
   **/
   @ApiModelProperty(value = "")
   public List<String> getErrorMessages() {
     return errorMessages;
   }
 
   public void setErrorMessages(List<String> errorMessages) {
     this.errorMessages = errorMessages;
   }
 
   public BurpIssueData name(String name) {
     this.name = name;
     return this;
   }
 
    /**
    * Get name
    * @return name
   **/
   @ApiModelProperty(value = "")
   public String getName() {
     return name;
   }
 
   public void setName(String name) {
     this.name = name;
   }
 
   public BurpIssueData serialNumber(String serialNumber) {
     this.serialNumber = serialNumber;
     return this;
   }
 
    /**
    * Get serialNumber
    * @return serialNumber
   **/
   @ApiModelProperty(value = "")
   public String getSerialNumber() {
     return serialNumber;
   }
 
   public void setSerialNumber(String serialNumber) {
     this.serialNumber = serialNumber;
   }
 
   public BurpIssueData type(String type) {
     this.type = type;
     return this;
   }
 
    /**
    * Get type
    * @return type
   **/
   @ApiModelProperty(value = "")
   public String getType() {
     return type;
   }
 
   public void setType(String type) {
     this.type = type;
   }
 
   public BurpIssueData host(BurpIssueHost host) {
     this.host = host;
     return this;
   }
 
    /**
    * Get host
    * @return host
   **/
   @ApiModelProperty(value = "")
   public BurpIssueHost getHost() {
     return host;
   }
 
   public void setHost(BurpIssueHost host) {
     this.host = host;
   }
 
   public BurpIssueData path(String path) {
     this.path = path;
     return this;
   }
 
    /**
    * Get path
    * @return path
   **/
   @ApiModelProperty(value = "")
   public String getPath() {
     return path;
   }
 
   public void setPath(String path) {
     this.path = path;
   }
 
   public BurpIssueData location(String location) {
     this.location = location;
     return this;
   }
 
    /**
    * Get location
    * @return location
   **/
   @ApiModelProperty(value = "")
   public String getLocation() {
     return location;
   }
 
   public void setLocation(String location) {
     this.location = location;
   }
 
   public BurpIssueData severity(String severity) {
     this.severity = severity;
     return this;
   }
 
    /**
    * Get severity
    * @return severity
   **/
   @ApiModelProperty(value = "")
   public String getSeverity() {
     return severity;
   }
 
   public void setSeverity(String severity) {
     this.severity = severity;
   }
 
   public BurpIssueData confidence(String confidence) {
     this.confidence = confidence;
     return this;
   }
 
    /**
    * Get confidence
    * @return confidence
   **/
   @ApiModelProperty(value = "")
   public String getConfidence() {
     return confidence;
   }
 
   public void setConfidence(String confidence) {
     this.confidence = confidence;
   }
 
   public BurpIssueData issueBackground(String issueBackground) {
     this.issueBackground = issueBackground;
     return this;
   }
 
    /**
    * Get issueBackground
    * @return issueBackground
   **/
   @ApiModelProperty(value = "")
   public String getIssueBackground() {
     return issueBackground;
   }
 
   public void setIssueBackground(String issueBackground) {
     this.issueBackground = issueBackground;
   }
 
   public BurpIssueData remediationBackground(String remediationBackground) {
     this.remediationBackground = remediationBackground;
     return this;
   }
 
    /**
    * Get remediationBackground
    * @return remediationBackground
   **/
   @ApiModelProperty(value = "")
   public String getRemediationBackground() {
     return remediationBackground;
   }
 
   public void setRemediationBackground(String remediationBackground) {
     this.remediationBackground = remediationBackground;
   }
 
   public BurpIssueData remediationDetail(String remediationDetail) {
     this.remediationDetail = remediationDetail;
     return this;
   }
 
    /**
    * Get remediationDetail
    * @return remediationDetail
   **/
   @ApiModelProperty(value = "")
   public String getRemediationDetail() {
     return remediationDetail;
   }
 
   public void setRemediationDetail(String remediationDetail) {
     this.remediationDetail = remediationDetail;
   }
 
   public BurpIssueData references(String references) {
     this.references = references;
     return this;
   }
 
    /**
    * Get references
    * @return references
   **/
   @ApiModelProperty(value = "")
   public String getReferences() {
     return references;
   }
 
   public void setReferences(String references) {
     this.references = references;
   }
 
   public BurpIssueData vulnerabilityClassifications(String vulnerabilityClassifications) {
     this.vulnerabilityClassifications = vulnerabilityClassifications;
     return this;
   }
 
    /**
    * Get vulnerabilityClassifications
    * @return vulnerabilityClassifications
   **/
   @ApiModelProperty(value = "")
   public String getVulnerabilityClassifications() {
     return vulnerabilityClassifications;
   }
 
   public void setVulnerabilityClassifications(String vulnerabilityClassifications) {
     this.vulnerabilityClassifications = vulnerabilityClassifications;
   }
 
   public BurpIssueData issueDetail(String issueDetail) {
     this.issueDetail = issueDetail;
     return this;
   }
 
    /**
    * Get issueDetail
    * @return issueDetail
   **/
   @ApiModelProperty(value = "")
   public String getIssueDetail() {
     return issueDetail;
   }
 
   public void setIssueDetail(String issueDetail) {
     this.issueDetail = issueDetail;
   }
 
   public BurpIssueData issueDetailItems(List<String> issueDetailItems) {
     this.issueDetailItems = issueDetailItems;
     return this;
   }
 
   public BurpIssueData addIssueDetailItemsItem(String issueDetailItemsItem) {
     if (this.issueDetailItems == null) {
       this.issueDetailItems = new ArrayList<String>();
     }
     this.issueDetailItems.add(issueDetailItemsItem);
     return this;
   }
 
    /**
    * Get issueDetailItems
    * @return issueDetailItems
   **/
   @ApiModelProperty(value = "")
   public List<String> getIssueDetailItems() {
     return issueDetailItems;
   }
 
   public void setIssueDetailItems(List<String> issueDetailItems) {
     this.issueDetailItems = issueDetailItems;
   }
 
   public BurpIssueData requestResponses(List<BurpIssueRequestResponse> requestResponses) {
     this.requestResponses = requestResponses;
     return this;
   }
 
   public BurpIssueData addRequestResponsesItem(BurpIssueRequestResponse requestResponsesItem) {
     if (this.requestResponses == null) {
       this.requestResponses = new ArrayList<BurpIssueRequestResponse>();
     }
     this.requestResponses.add(requestResponsesItem);
     return this;
   }
 
    /**
    * Get requestResponses
    * @return requestResponses
   **/
   @ApiModelProperty(value = "")
   public List<BurpIssueRequestResponse> getRequestResponses() {
     return requestResponses;
   }
 
   public void setRequestResponses(List<BurpIssueRequestResponse> requestResponses) {
     this.requestResponses = requestResponses;
   }
 
   public BurpIssueData collaboratorEvents(List<BurpIssueCollaboratorEvent> collaboratorEvents) {
     this.collaboratorEvents = collaboratorEvents;
     return this;
   }
 
   public BurpIssueData addCollaboratorEventsItem(BurpIssueCollaboratorEvent collaboratorEventsItem) {
     if (this.collaboratorEvents == null) {
       this.collaboratorEvents = new ArrayList<BurpIssueCollaboratorEvent>();
     }
     this.collaboratorEvents.add(collaboratorEventsItem);
     return this;
   }
 
    /**
    * Get collaboratorEvents
    * @return collaboratorEvents
   **/
   @ApiModelProperty(value = "")
   public List<BurpIssueCollaboratorEvent> getCollaboratorEvents() {
     return collaboratorEvents;
   }
 
   public void setCollaboratorEvents(List<BurpIssueCollaboratorEvent> collaboratorEvents) {
     this.collaboratorEvents = collaboratorEvents;
   }
 
   public BurpIssueData infiltratorEvents(List<BurpIssueInfiltratorEvent> infiltratorEvents) {
     this.infiltratorEvents = infiltratorEvents;
     return this;
   }
 
   public BurpIssueData addInfiltratorEventsItem(BurpIssueInfiltratorEvent infiltratorEventsItem) {
     if (this.infiltratorEvents == null) {
       this.infiltratorEvents = new ArrayList<BurpIssueInfiltratorEvent>();
     }
     this.infiltratorEvents.add(infiltratorEventsItem);
     return this;
   }
 
    /**
    * Get infiltratorEvents
    * @return infiltratorEvents
   **/
   @ApiModelProperty(value = "")
   public List<BurpIssueInfiltratorEvent> getInfiltratorEvents() {
     return infiltratorEvents;
   }
 
   public void setInfiltratorEvents(List<BurpIssueInfiltratorEvent> infiltratorEvents) {
     this.infiltratorEvents = infiltratorEvents;
   }
 
   public BurpIssueData staticAnalysisItems(List<BurpIssueStaticAnalysisItem> staticAnalysisItems) {
     this.staticAnalysisItems = staticAnalysisItems;
     return this;
   }
 
   public BurpIssueData addStaticAnalysisItemsItem(BurpIssueStaticAnalysisItem staticAnalysisItemsItem) {
     if (this.staticAnalysisItems == null) {
       this.staticAnalysisItems = new ArrayList<BurpIssueStaticAnalysisItem>();
     }
     this.staticAnalysisItems.add(staticAnalysisItemsItem);
     return this;
   }
 
    /**
    * Get staticAnalysisItems
    * @return staticAnalysisItems
   **/
   @ApiModelProperty(value = "")
   public List<BurpIssueStaticAnalysisItem> getStaticAnalysisItems() {
     return staticAnalysisItems;
   }
 
   public void setStaticAnalysisItems(List<BurpIssueStaticAnalysisItem> staticAnalysisItems) {
     this.staticAnalysisItems = staticAnalysisItems;
   }
 
   public BurpIssueData dynamicAnalysisItems(List<BurpIssueDynamicAnalysisItem> dynamicAnalysisItems) {
     this.dynamicAnalysisItems = dynamicAnalysisItems;
     return this;
   }
 
   public BurpIssueData addDynamicAnalysisItemsItem(BurpIssueDynamicAnalysisItem dynamicAnalysisItemsItem) {
     if (this.dynamicAnalysisItems == null) {
       this.dynamicAnalysisItems = new ArrayList<BurpIssueDynamicAnalysisItem>();
     }
     this.dynamicAnalysisItems.add(dynamicAnalysisItemsItem);
     return this;
   }
 
    /**
    * Get dynamicAnalysisItems
    * @return dynamicAnalysisItems
   **/
   @ApiModelProperty(value = "")
   public List<BurpIssueDynamicAnalysisItem> getDynamicAnalysisItems() {
     return dynamicAnalysisItems;
   }
 
   public void setDynamicAnalysisItems(List<BurpIssueDynamicAnalysisItem> dynamicAnalysisItems) {
     this.dynamicAnalysisItems = dynamicAnalysisItems;
   }
 
   public BurpIssueData prototypePollutionItems(List<BurpIssuePrototypePollutionItem> prototypePollutionItems) {
     this.prototypePollutionItems = prototypePollutionItems;
     return this;
   }
 
   public BurpIssueData addPrototypePollutionItemsItem(BurpIssuePrototypePollutionItem prototypePollutionItemsItem) {
     if (this.prototypePollutionItems == null) {
       this.prototypePollutionItems = new ArrayList<BurpIssuePrototypePollutionItem>();
     }
     this.prototypePollutionItems.add(prototypePollutionItemsItem);
     return this;
   }
 
    /**
    * Get prototypePollutionItems
    * @return prototypePollutionItems
   **/
   @ApiModelProperty(value = "")
   public List<BurpIssuePrototypePollutionItem> getPrototypePollutionItems() {
     return prototypePollutionItems;
   }
 
   public void setPrototypePollutionItems(List<BurpIssuePrototypePollutionItem> prototypePollutionItems) {
     this.prototypePollutionItems = prototypePollutionItems;
   }
 
 
   @Override
   public boolean equals(java.lang.Object o) {
     if (this == o) {
       return true;
     }
     if (o == null || getClass() != o.getClass()) {
       return false;
     }
     BurpIssueData burpIssueData = (BurpIssueData) o;
     return Objects.equals(this.succeeded, burpIssueData.succeeded) &&
         Objects.equals(this.errorMessages, burpIssueData.errorMessages) &&
         Objects.equals(this.name, burpIssueData.name) &&
         Objects.equals(this.serialNumber, burpIssueData.serialNumber) &&
         Objects.equals(this.type, burpIssueData.type) &&
         Objects.equals(this.host, burpIssueData.host) &&
         Objects.equals(this.path, burpIssueData.path) &&
         Objects.equals(this.location, burpIssueData.location) &&
         Objects.equals(this.severity, burpIssueData.severity) &&
         Objects.equals(this.confidence, burpIssueData.confidence) &&
         Objects.equals(this.issueBackground, burpIssueData.issueBackground) &&
         Objects.equals(this.remediationBackground, burpIssueData.remediationBackground) &&
         Objects.equals(this.remediationDetail, burpIssueData.remediationDetail) &&
         Objects.equals(this.references, burpIssueData.references) &&
         Objects.equals(this.vulnerabilityClassifications, burpIssueData.vulnerabilityClassifications) &&
         Objects.equals(this.issueDetail, burpIssueData.issueDetail) &&
         Objects.equals(this.issueDetailItems, burpIssueData.issueDetailItems) &&
         Objects.equals(this.requestResponses, burpIssueData.requestResponses) &&
         Objects.equals(this.collaboratorEvents, burpIssueData.collaboratorEvents) &&
         Objects.equals(this.infiltratorEvents, burpIssueData.infiltratorEvents) &&
         Objects.equals(this.staticAnalysisItems, burpIssueData.staticAnalysisItems) &&
         Objects.equals(this.dynamicAnalysisItems, burpIssueData.dynamicAnalysisItems) &&
         Objects.equals(this.prototypePollutionItems, burpIssueData.prototypePollutionItems);
   }
 
   @Override
   public int hashCode() {
     return Objects.hash(succeeded, errorMessages, name, serialNumber, type, host, path, location, severity, confidence, issueBackground, remediationBackground, remediationDetail, references, vulnerabilityClassifications, issueDetail, issueDetailItems, requestResponses, collaboratorEvents, infiltratorEvents, staticAnalysisItems, dynamicAnalysisItems, prototypePollutionItems);
   }
 
 
   @Override
   public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("class BurpIssueData {\n");
     
     sb.append("    succeeded: ").append(toIndentedString(succeeded)).append("\n");
     sb.append("    errorMessages: ").append(toIndentedString(errorMessages)).append("\n");
     sb.append("    name: ").append(toIndentedString(name)).append("\n");
     sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
     sb.append("    type: ").append(toIndentedString(type)).append("\n");
     sb.append("    host: ").append(toIndentedString(host)).append("\n");
     sb.append("    path: ").append(toIndentedString(path)).append("\n");
     sb.append("    location: ").append(toIndentedString(location)).append("\n");
     sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
     sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
     sb.append("    issueBackground: ").append(toIndentedString(issueBackground)).append("\n");
     sb.append("    remediationBackground: ").append(toIndentedString(remediationBackground)).append("\n");
     sb.append("    remediationDetail: ").append(toIndentedString(remediationDetail)).append("\n");
     sb.append("    references: ").append(toIndentedString(references)).append("\n");
     sb.append("    vulnerabilityClassifications: ").append(toIndentedString(vulnerabilityClassifications)).append("\n");
     sb.append("    issueDetail: ").append(toIndentedString(issueDetail)).append("\n");
     sb.append("    issueDetailItems: ").append(toIndentedString(issueDetailItems)).append("\n");
     sb.append("    requestResponses: ").append(toIndentedString(requestResponses)).append("\n");
     sb.append("    collaboratorEvents: ").append(toIndentedString(collaboratorEvents)).append("\n");
     sb.append("    infiltratorEvents: ").append(toIndentedString(infiltratorEvents)).append("\n");
     sb.append("    staticAnalysisItems: ").append(toIndentedString(staticAnalysisItems)).append("\n");
     sb.append("    dynamicAnalysisItems: ").append(toIndentedString(dynamicAnalysisItems)).append("\n");
     sb.append("    prototypePollutionItems: ").append(toIndentedString(prototypePollutionItems)).append("\n");
     sb.append("}");
     return sb.toString();
   }
 
   /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
   private String toIndentedString(java.lang.Object o) {
     if (o == null) {
       return "null";
     }
     return o.toString().replace("\n", "\n    ");
   }
 
 }
 
 