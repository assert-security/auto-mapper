/*
 * LocalServer
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


 package io.swagger.client.model;

 import java.util.Objects;
 import com.google.gson.annotations.SerializedName;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 
 /**
  * 
  */
 @ApiModel(description = "")
 @javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-03-05T11:32:31.617-05:00")
 public class BurpIssueDynamicAnalysisItem {
   @SerializedName("Source")
   private String source = null;
 
   @SerializedName("Sink")
   private String sink = null;
 
   @SerializedName("SourceStackTrace")
   private String sourceStackTrace = null;
 
   @SerializedName("SinkStackTrace")
   private String sinkStackTrace = null;
 
   @SerializedName("EventListenerStackTrace")
   private String eventListenerStackTrace = null;
 
   @SerializedName("SourceValue")
   private String sourceValue = null;
 
   @SerializedName("SinkValue")
   private String sinkValue = null;
 
   @SerializedName("EventHandlerData")
   private String eventHandlerData = null;
 
   @SerializedName("EventHandlerDataType")
   private String eventHandlerDataType = null;
 
   @SerializedName("EventHandlerManipulatedData")
   private String eventHandlerManipulatedData = null;
 
   @SerializedName("POC")
   private String POC = null;
 
   @SerializedName("Origin")
   private String origin = null;
 
   @SerializedName("IsOriginChecked")
   private String isOriginChecked = null;
 
   @SerializedName("SourceElementId")
   private String sourceElementId = null;
 
   @SerializedName("SourceElementName")
   private String sourceElementName = null;
 
   @SerializedName("EventFiredEventName")
   private String eventFiredEventName = null;
 
   @SerializedName("EventFiredElementId")
   private String eventFiredElementId = null;
 
   @SerializedName("EventFiredElementName")
   private String eventFiredElementName = null;
 
   @SerializedName("EventFiredOuterHtml")
   private String eventFiredOuterHtml = null;
 
   public BurpIssueDynamicAnalysisItem source(String source) {
     this.source = source;
     return this;
   }
 
    /**
    * Get source
    * @return source
   **/
   @ApiModelProperty(value = "")
   public String getSource() {
     return source;
   }
 
   public void setSource(String source) {
     this.source = source;
   }
 
   public BurpIssueDynamicAnalysisItem sink(String sink) {
     this.sink = sink;
     return this;
   }
 
    /**
    * Get sink
    * @return sink
   **/
   @ApiModelProperty(value = "")
   public String getSink() {
     return sink;
   }
 
   public void setSink(String sink) {
     this.sink = sink;
   }
 
   public BurpIssueDynamicAnalysisItem sourceStackTrace(String sourceStackTrace) {
     this.sourceStackTrace = sourceStackTrace;
     return this;
   }
 
    /**
    * Get sourceStackTrace
    * @return sourceStackTrace
   **/
   @ApiModelProperty(value = "")
   public String getSourceStackTrace() {
     return sourceStackTrace;
   }
 
   public void setSourceStackTrace(String sourceStackTrace) {
     this.sourceStackTrace = sourceStackTrace;
   }
 
   public BurpIssueDynamicAnalysisItem sinkStackTrace(String sinkStackTrace) {
     this.sinkStackTrace = sinkStackTrace;
     return this;
   }
 
    /**
    * Get sinkStackTrace
    * @return sinkStackTrace
   **/
   @ApiModelProperty(value = "")
   public String getSinkStackTrace() {
     return sinkStackTrace;
   }
 
   public void setSinkStackTrace(String sinkStackTrace) {
     this.sinkStackTrace = sinkStackTrace;
   }
 
   public BurpIssueDynamicAnalysisItem eventListenerStackTrace(String eventListenerStackTrace) {
     this.eventListenerStackTrace = eventListenerStackTrace;
     return this;
   }
 
    /**
    * Get eventListenerStackTrace
    * @return eventListenerStackTrace
   **/
   @ApiModelProperty(value = "")
   public String getEventListenerStackTrace() {
     return eventListenerStackTrace;
   }
 
   public void setEventListenerStackTrace(String eventListenerStackTrace) {
     this.eventListenerStackTrace = eventListenerStackTrace;
   }
 
   public BurpIssueDynamicAnalysisItem sourceValue(String sourceValue) {
     this.sourceValue = sourceValue;
     return this;
   }
 
    /**
    * Get sourceValue
    * @return sourceValue
   **/
   @ApiModelProperty(value = "")
   public String getSourceValue() {
     return sourceValue;
   }
 
   public void setSourceValue(String sourceValue) {
     this.sourceValue = sourceValue;
   }
 
   public BurpIssueDynamicAnalysisItem sinkValue(String sinkValue) {
     this.sinkValue = sinkValue;
     return this;
   }
 
    /**
    * Get sinkValue
    * @return sinkValue
   **/
   @ApiModelProperty(value = "")
   public String getSinkValue() {
     return sinkValue;
   }
 
   public void setSinkValue(String sinkValue) {
     this.sinkValue = sinkValue;
   }
 
   public BurpIssueDynamicAnalysisItem eventHandlerData(String eventHandlerData) {
     this.eventHandlerData = eventHandlerData;
     return this;
   }
 
    /**
    * Get eventHandlerData
    * @return eventHandlerData
   **/
   @ApiModelProperty(value = "")
   public String getEventHandlerData() {
     return eventHandlerData;
   }
 
   public void setEventHandlerData(String eventHandlerData) {
     this.eventHandlerData = eventHandlerData;
   }
 
   public BurpIssueDynamicAnalysisItem eventHandlerDataType(String eventHandlerDataType) {
     this.eventHandlerDataType = eventHandlerDataType;
     return this;
   }
 
    /**
    * Get eventHandlerDataType
    * @return eventHandlerDataType
   **/
   @ApiModelProperty(value = "")
   public String getEventHandlerDataType() {
     return eventHandlerDataType;
   }
 
   public void setEventHandlerDataType(String eventHandlerDataType) {
     this.eventHandlerDataType = eventHandlerDataType;
   }
 
   public BurpIssueDynamicAnalysisItem eventHandlerManipulatedData(String eventHandlerManipulatedData) {
     this.eventHandlerManipulatedData = eventHandlerManipulatedData;
     return this;
   }
 
    /**
    * Get eventHandlerManipulatedData
    * @return eventHandlerManipulatedData
   **/
   @ApiModelProperty(value = "")
   public String getEventHandlerManipulatedData() {
     return eventHandlerManipulatedData;
   }
 
   public void setEventHandlerManipulatedData(String eventHandlerManipulatedData) {
     this.eventHandlerManipulatedData = eventHandlerManipulatedData;
   }
 
   public BurpIssueDynamicAnalysisItem POC(String POC) {
     this.POC = POC;
     return this;
   }
 
    /**
    * Get POC
    * @return POC
   **/
   @ApiModelProperty(value = "")
   public String getPOC() {
     return POC;
   }
 
   public void setPOC(String POC) {
     this.POC = POC;
   }
 
   public BurpIssueDynamicAnalysisItem origin(String origin) {
     this.origin = origin;
     return this;
   }
 
    /**
    * Get origin
    * @return origin
   **/
   @ApiModelProperty(value = "")
   public String getOrigin() {
     return origin;
   }
 
   public void setOrigin(String origin) {
     this.origin = origin;
   }
 
   public BurpIssueDynamicAnalysisItem isOriginChecked(String isOriginChecked) {
     this.isOriginChecked = isOriginChecked;
     return this;
   }
 
    /**
    * Get isOriginChecked
    * @return isOriginChecked
   **/
   @ApiModelProperty(value = "")
   public String getIsOriginChecked() {
     return isOriginChecked;
   }
 
   public void setIsOriginChecked(String isOriginChecked) {
     this.isOriginChecked = isOriginChecked;
   }
 
   public BurpIssueDynamicAnalysisItem sourceElementId(String sourceElementId) {
     this.sourceElementId = sourceElementId;
     return this;
   }
 
    /**
    * Get sourceElementId
    * @return sourceElementId
   **/
   @ApiModelProperty(value = "")
   public String getSourceElementId() {
     return sourceElementId;
   }
 
   public void setSourceElementId(String sourceElementId) {
     this.sourceElementId = sourceElementId;
   }
 
   public BurpIssueDynamicAnalysisItem sourceElementName(String sourceElementName) {
     this.sourceElementName = sourceElementName;
     return this;
   }
 
    /**
    * Get sourceElementName
    * @return sourceElementName
   **/
   @ApiModelProperty(value = "")
   public String getSourceElementName() {
     return sourceElementName;
   }
 
   public void setSourceElementName(String sourceElementName) {
     this.sourceElementName = sourceElementName;
   }
 
   public BurpIssueDynamicAnalysisItem eventFiredEventName(String eventFiredEventName) {
     this.eventFiredEventName = eventFiredEventName;
     return this;
   }
 
    /**
    * Get eventFiredEventName
    * @return eventFiredEventName
   **/
   @ApiModelProperty(value = "")
   public String getEventFiredEventName() {
     return eventFiredEventName;
   }
 
   public void setEventFiredEventName(String eventFiredEventName) {
     this.eventFiredEventName = eventFiredEventName;
   }
 
   public BurpIssueDynamicAnalysisItem eventFiredElementId(String eventFiredElementId) {
     this.eventFiredElementId = eventFiredElementId;
     return this;
   }
 
    /**
    * Get eventFiredElementId
    * @return eventFiredElementId
   **/
   @ApiModelProperty(value = "")
   public String getEventFiredElementId() {
     return eventFiredElementId;
   }
 
   public void setEventFiredElementId(String eventFiredElementId) {
     this.eventFiredElementId = eventFiredElementId;
   }
 
   public BurpIssueDynamicAnalysisItem eventFiredElementName(String eventFiredElementName) {
     this.eventFiredElementName = eventFiredElementName;
     return this;
   }
 
    /**
    * Get eventFiredElementName
    * @return eventFiredElementName
   **/
   @ApiModelProperty(value = "")
   public String getEventFiredElementName() {
     return eventFiredElementName;
   }
 
   public void setEventFiredElementName(String eventFiredElementName) {
     this.eventFiredElementName = eventFiredElementName;
   }
 
   public BurpIssueDynamicAnalysisItem eventFiredOuterHtml(String eventFiredOuterHtml) {
     this.eventFiredOuterHtml = eventFiredOuterHtml;
     return this;
   }
 
    /**
    * Get eventFiredOuterHtml
    * @return eventFiredOuterHtml
   **/
   @ApiModelProperty(value = "")
   public String getEventFiredOuterHtml() {
     return eventFiredOuterHtml;
   }
 
   public void setEventFiredOuterHtml(String eventFiredOuterHtml) {
     this.eventFiredOuterHtml = eventFiredOuterHtml;
   }
 
 
   @Override
   public boolean equals(java.lang.Object o) {
     if (this == o) {
       return true;
     }
     if (o == null || getClass() != o.getClass()) {
       return false;
     }
     BurpIssueDynamicAnalysisItem burpIssueDynamicAnalysisItem = (BurpIssueDynamicAnalysisItem) o;
     return Objects.equals(this.source, burpIssueDynamicAnalysisItem.source) &&
         Objects.equals(this.sink, burpIssueDynamicAnalysisItem.sink) &&
         Objects.equals(this.sourceStackTrace, burpIssueDynamicAnalysisItem.sourceStackTrace) &&
         Objects.equals(this.sinkStackTrace, burpIssueDynamicAnalysisItem.sinkStackTrace) &&
         Objects.equals(this.eventListenerStackTrace, burpIssueDynamicAnalysisItem.eventListenerStackTrace) &&
         Objects.equals(this.sourceValue, burpIssueDynamicAnalysisItem.sourceValue) &&
         Objects.equals(this.sinkValue, burpIssueDynamicAnalysisItem.sinkValue) &&
         Objects.equals(this.eventHandlerData, burpIssueDynamicAnalysisItem.eventHandlerData) &&
         Objects.equals(this.eventHandlerDataType, burpIssueDynamicAnalysisItem.eventHandlerDataType) &&
         Objects.equals(this.eventHandlerManipulatedData, burpIssueDynamicAnalysisItem.eventHandlerManipulatedData) &&
         Objects.equals(this.POC, burpIssueDynamicAnalysisItem.POC) &&
         Objects.equals(this.origin, burpIssueDynamicAnalysisItem.origin) &&
         Objects.equals(this.isOriginChecked, burpIssueDynamicAnalysisItem.isOriginChecked) &&
         Objects.equals(this.sourceElementId, burpIssueDynamicAnalysisItem.sourceElementId) &&
         Objects.equals(this.sourceElementName, burpIssueDynamicAnalysisItem.sourceElementName) &&
         Objects.equals(this.eventFiredEventName, burpIssueDynamicAnalysisItem.eventFiredEventName) &&
         Objects.equals(this.eventFiredElementId, burpIssueDynamicAnalysisItem.eventFiredElementId) &&
         Objects.equals(this.eventFiredElementName, burpIssueDynamicAnalysisItem.eventFiredElementName) &&
         Objects.equals(this.eventFiredOuterHtml, burpIssueDynamicAnalysisItem.eventFiredOuterHtml);
   }
 
   @Override
   public int hashCode() {
     return Objects.hash(source, sink, sourceStackTrace, sinkStackTrace, eventListenerStackTrace, sourceValue, sinkValue, eventHandlerData, eventHandlerDataType, eventHandlerManipulatedData, POC, origin, isOriginChecked, sourceElementId, sourceElementName, eventFiredEventName, eventFiredElementId, eventFiredElementName, eventFiredOuterHtml);
   }
 
 
   @Override
   public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("class BurpIssueDynamicAnalysisItem {\n");
     
     sb.append("    source: ").append(toIndentedString(source)).append("\n");
     sb.append("    sink: ").append(toIndentedString(sink)).append("\n");
     sb.append("    sourceStackTrace: ").append(toIndentedString(sourceStackTrace)).append("\n");
     sb.append("    sinkStackTrace: ").append(toIndentedString(sinkStackTrace)).append("\n");
     sb.append("    eventListenerStackTrace: ").append(toIndentedString(eventListenerStackTrace)).append("\n");
     sb.append("    sourceValue: ").append(toIndentedString(sourceValue)).append("\n");
     sb.append("    sinkValue: ").append(toIndentedString(sinkValue)).append("\n");
     sb.append("    eventHandlerData: ").append(toIndentedString(eventHandlerData)).append("\n");
     sb.append("    eventHandlerDataType: ").append(toIndentedString(eventHandlerDataType)).append("\n");
     sb.append("    eventHandlerManipulatedData: ").append(toIndentedString(eventHandlerManipulatedData)).append("\n");
     sb.append("    POC: ").append(toIndentedString(POC)).append("\n");
     sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
     sb.append("    isOriginChecked: ").append(toIndentedString(isOriginChecked)).append("\n");
     sb.append("    sourceElementId: ").append(toIndentedString(sourceElementId)).append("\n");
     sb.append("    sourceElementName: ").append(toIndentedString(sourceElementName)).append("\n");
     sb.append("    eventFiredEventName: ").append(toIndentedString(eventFiredEventName)).append("\n");
     sb.append("    eventFiredElementId: ").append(toIndentedString(eventFiredElementId)).append("\n");
     sb.append("    eventFiredElementName: ").append(toIndentedString(eventFiredElementName)).append("\n");
     sb.append("    eventFiredOuterHtml: ").append(toIndentedString(eventFiredOuterHtml)).append("\n");
     sb.append("}");
     return sb.toString();
   }
 
   /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
   private String toIndentedString(java.lang.Object o) {
     if (o == null) {
       return "null";
     }
     return o.toString().replace("\n", "\n    ");
   }
 
 }
 
 